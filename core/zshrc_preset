# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
# export TERM="xterm-256color"

# Path to your oh-my-zsh installation.
export ZSH="/home/user/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="minimal"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	git
	vi-mode
	sudo
	colored-man-pages
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# User defined functions
env.c()
{
	cp -n /etc/yard/c/*(DN) .
}

env.cpp()
{
	cp -n /etc/yard/cpp/*(DN) .
}

env.js()
{
	cp -n /etc/yard/js/*(DN) .
}

freemem()
{
	sudo echo 'Clearing swap...'
	sudo swapoff -a
	echo 'Reassigning swap...'
	sudo swapon -a
	echo 'Clearing cache...'
	sudo sync
	sudo sh -c '/usr/bin/echo 3 > /proc/sys/vm/drop_caches'
	echo 'Done.'
}

f()
{
	$@ &> /dev/null & disown
}
compdef f=exec

fe()
{
	$@ &> /dev/null & disown && exit
}
compdef fe=exec

mnt()
{
	sudo mount $@ /mnt && cd /mnt
}

sanbox_patch()
{
	sudo cp -r /etc/sanbox/* /
}

t()
{
	if [[ "$@" = "" ]]; then
		ls
	else
		cd "$@" &&
		ls
	fi
}

umnt()
{
	sudo umount -R /mnt
}

update()
{
	if [[ "$@" == "" ]]; then
		echo "If the download speed is too slow, try \"-a\" flag.\nYou can use \"-m\" to update mirrorlist or \"-r\" to purge orphans and outdated packages."
		pacaur -Syu
		sanbox_patch
		sudo paccache -r
		sudo pacman -Rns $(pacman -Qtdq)
	elif [[ "$@" == "-a" ]]; then
		sudo echo ':: Synchronizing mirrorlist...'
		sudo reflector --verbose --latest 50 --sort rate --save /etc/pacman.d/mirrorlist &&
		pacaur -Syu
		sanbox_patch
		sudo paccache -r
		sudo pacman -Rns $(pacman -Qtdq)
	elif [[ "$@" == "-m" ]]; then
		sudo echo ':: Synchronizing mirrorlist...'
		sudo reflector --verbose --latest 50 --sort rate --save /etc/pacman.d/mirrorlist &&
		echo "Done."
	elif [[ "$@" == "-r" ]]; then
		sudo paccache -r
		sudo pacman -Rns $(pacman -Qtdq)
	else
		echo "Error: Unknown flag.\nAvailable flags:\n\t-a\tComplete update.\n\t-m\tUpdate mirrorlist.\n\t-r\tPurge orphan and outdated packages."
	fi
}

yard()
{
	if [[ "$2" == "" ]]; then
		mkdir tmp &&
		cd tmp &&

		if [[ "$1" == "cpp" ]]; then
			env.cpp &&
			vv main.cpp &&

		elif [[ "$1" == "c" ]]; then
			env.c &&
			vv main.c &&

		elif [[ "$1" == "js" ]]; then
			env.js &&
			vv script.js &&

		else
			vv yard."$1" &&
		fi

		cd - &&
		rm -r tmp

	else
		mkdir "$2" &&
		cd "$2" &&

		if [[ "$1" == "cpp" ]]; then
			env.cpp &&
			vv main.cpp

		elif [[ "$1" == "c" ]]; then
			env.c &&
			vv main.c

		elif [[ "$1" == "js" ]]; then
			env.js &&
			vv script.js

		else
			vv "$2"."$1"
		fi
	fi
}

# Aliases
alias get="pacaur -S"
alias i3conf="v ~/.config/i3/config"
alias purge="pacaur -Rsc"
alias tt="t ~"
alias vconf="sudo v /etc/vimrc"
alias wm="sudo wifi-menu"
alias x="tmux attach -t 0 || tmux"
alias z="fg"
alias zconf="v ~/.zshrc"
